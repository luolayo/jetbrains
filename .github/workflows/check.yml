name: Quick Check

on:
  pull_request:
    branches: [ main, master, develop ]
  push:
    branches: [ develop ]

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '18'

jobs:
  # 代码检查
  lint:
    name: Code Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Go Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Frontend Lint
        run: |
          cd frontend
          npm run lint || true

  # 测试
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run Go tests
        run: go test -v -race -coverprofile=coverage.out ./... || true

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          file: ./coverage.out
          flags: unittests

  # 快速构建测试（仅构建当前平台）
  build-test:
    name: Build Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev
          # 尝试安装 4.1 版本，如果失败则安装 4.0 版本（兼容旧系统）
          sudo apt-get install -y libwebkit2gtk-4.1-dev || \
          sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Build application
        run: wails build
        env:
          CGO_ENABLED: 1

  # 检查摘要
  summary:
    name: Check Summary
    needs: [lint, test, build-test]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Generate summary
        run: |
          echo "## ✅ Quick Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build-test.result }} |" >> $GITHUB_STEP_SUMMARY

      - name: Check if all passed
        if: needs.lint.result != 'success' || needs.test.result != 'success' || needs.build-test.result != 'success'
        run: |
          echo "❌ Some checks failed"
          exit 1
