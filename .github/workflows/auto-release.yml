name: Auto Create Release

on:
  push:
    tags:
      - 'v*'  # 匹配 v1.0.0, v2.1.3 等格式的 tag

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整的 git 历史，用于生成 changelog

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # 获取最近两个 tag 之间的提交记录
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -v "^${{ steps.get_version.outputs.version }}$" | head -n1)

          if [ -z "$PREVIOUS_TAG" ]; then
            # 如果没有前一个 tag，获取所有提交
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # 获取两个 tag 之间的提交
            CHANGELOG=$(git log ${PREVIOUS_TAG}..${{ steps.get_version.outputs.version }} --pretty=format:"- %s (%h)" --no-merges)
          fi

          # 将 changelog 保存到文件，避免多行字符串问题
          echo "$CHANGELOG" > changelog.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body_path: changelog.txt
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}