name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:
    branches: [ main, master ]

env:
  APP_NAME: jetbrains
  VERSION: 1.0.0

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64, universal]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install UPX
        run: brew install upx

      - name: Build macOS ${{ matrix.arch }}
        run: |
          wails build -platform darwin/${{ matrix.arch }} -upx

      - name: Package for macOS
        run: |
          cd build/bin
          if [ "${{ matrix.arch }}" = "universal" ]; then
            zip -r ../../${{ env.APP_NAME }}-macOS-${{ matrix.arch }}.zip *.app
          else
            zip -r ../../${{ env.APP_NAME }}-macOS-${{ matrix.arch }}.zip *.app
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-macOS-${{ matrix.arch }}
          path: ${{ env.APP_NAME }}-macOS-${{ matrix.arch }}.zip

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install UPX
        run: |
          choco install upx

      - name: Build Windows ${{ matrix.arch }}
        run: |
          wails build -platform windows/${{ matrix.arch }} -upx

      - name: Package for Windows
        run: |
          cd build/bin
          7z a ../../${{ env.APP_NAME }}-Windows-${{ matrix.arch }}.zip *.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-Windows-${{ matrix.arch }}
          path: ${{ env.APP_NAME }}-Windows-${{ matrix.arch }}.zip

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libwebkit2gtk-4.0-dev upx

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Linux ${{ matrix.arch }}
        run: |
          wails build -platform linux/${{ matrix.arch }} -upx

      - name: Package for Linux
        run: |
          cd build/bin
          tar -czf ../../${{ env.APP_NAME }}-Linux-${{ matrix.arch }}.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-Linux-${{ matrix.arch }}
          path: ${{ env.APP_NAME }}-Linux-${{ matrix.arch }}.tar.gz

  release:
    name: Create Release
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
